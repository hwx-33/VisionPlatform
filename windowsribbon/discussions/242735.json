[
  {
    "Id": "553124",
    "ThreadId": "242735",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Since the ribbons compatibility is limited to Windows Vista and Windows 7 and I still want my application to run on earlier versions of Windows, I decided my application would have both the Ribbon and a&nbsp;regular Menu and Toolbars.&nbsp; There will be\r\n an option for the user to switch back and forth between the Ribbon and the Menu and Toolbars.&nbsp; However, the Ribbon option will only be enabled at runtime if the operating system is Windows Vista or Windows 7.</p>\r\n<p>It seems the only way to do this is by <strong>creating the Ribbon at runtime</strong>, because if the Ribbon control is created at design time (placing the Ribbon control on&nbsp;form1 for example in the designer) the application will crash on startup if\r\n the operating system is Windows XP.&nbsp;&nbsp;Doing this&nbsp;seems to work except for some really\r\n<strong>odd behaviour on the first Tab </strong>of the Ribbon.</p>\r\n<p>So, creating the Ribbon at runtime seemed to work at first,&nbsp;until I tried placing a ComboBox on the Ribbon.&nbsp; The Combox\r\n<strong>RepresentativeString property (which is used to set the physical width of the ComboBox) has no effect</strong> if the ComboBox is on the first Tab of the Ribbon.&nbsp; If I switch the order of the Tabs in RibbonMarkup.xml, it doesn't matter, it's always\r\n only the first Tab that behaves this way.&nbsp;</p>\r\n<p>Not only the RepresentativeString has no effect, but the <strong>ItemsSourceReady has no effect\r\n</strong>either.&nbsp; The only way to add items to&nbsp;a ComboBox on the first Tab&nbsp;is by calling the ItemsSourceReady event explicitly (see InitComboBoxes() in the code below).&nbsp;</p>\r\n<p>Furthermore, I also notice that if I try setting button images in my code (eg.\r\n<strong>_buttonDropA.LargeImage = Ribbon1.ConvertToUIImage(My.Resources.IMAGE_NAME)</strong>) the\r\n<strong>images on the first Tab don't always show up</strong>, but they do sometimes (it's intermittent).</p>\r\n<p><strong>The following is code</strong> is from Form1 of the ComboBox sample included with the library (<strong>06-ComboBox</strong>).&nbsp; It's been modifed where\r\n<strong>createRibbon() </strong>is called in the Form1 load event.&nbsp; If I'm doing something wrong here, please help....&nbsp; I've been struggling with this for a while.&nbsp; Thanks.</p>\r\n<p>==============================================================</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">Imports</span> RibbonLib\r\n<span style=\"color:blue\">Imports</span> RibbonLib.Controls\r\n<span style=\"color:blue\">Imports</span> RibbonLib.Controls.Events\r\n<span style=\"color:blue\">Imports</span> RibbonLib.Interop\r\n\r\n<span style=\"color:blue\">Namespace</span> _06_ComboBox\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Enum</span> RibbonMarkupCommands <span style=\"color:blue\">As</span> <span style=\"color:blue\">UInteger</span>\r\n        cmdButtonDropA = 1008\r\n        cmdButtonDropB = 1009\r\n        cmdButtonDropC = 1010\r\n        cmdButtonDropD = 1011\r\n        cmdButtonDropE = 1012\r\n        cmdButtonDropF = 1013\r\n        cmdTabDrop = 1014\r\n        cmdGroupDrop = 1015\r\n        cmdGroupMore = 1017\r\n        cmdComboBox1 = 1018\r\n        cmdComboBox2 = 1019\r\n        cmdTabSecond = 1020\r\n        cmdGroupSecond = 1021\r\n        cmdComboBox3 = 1022\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Enum</span>\r\n\r\n\t<span style=\"color:blue\">Partial</span> <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Class</span> Form1\r\n\t\t<span style=\"color:blue\">Inherits</span> Form\r\n        <span style=\"color:blue\">Public</span> _buttonDropA <span style=\"color:blue\">As</span> RibbonButton\r\n        <span style=\"color:blue\">Public</span> _buttonDropB <span style=\"color:blue\">As</span> RibbonButton\r\n        <span style=\"color:blue\">Public</span> _buttonDropC <span style=\"color:blue\">As</span> RibbonButton\r\n        <span style=\"color:blue\">Public</span> _buttonDropD <span style=\"color:blue\">As</span> RibbonButton\r\n        <span style=\"color:blue\">Public</span> _buttonDropE <span style=\"color:blue\">As</span> RibbonButton\r\n        <span style=\"color:blue\">Public</span> _buttonDropF <span style=\"color:blue\">As</span> RibbonButton\r\n        <span style=\"color:blue\">Public</span> _comboBox1 <span style=\"color:blue\">As</span> RibbonComboBox\r\n        <span style=\"color:blue\">Public</span> _comboBox2 <span style=\"color:blue\">As</span> RibbonComboBox\r\n        <span style=\"color:blue\">Public</span> _comboBox3 <span style=\"color:blue\">As</span> RibbonComboBox\r\n\r\n        <span style=\"color:blue\">Public</span> _uiCollectionChangedEvent <span style=\"color:blue\">As</span> UICollectionChangedEvent\r\n\r\n        <span style=\"color:green\">'Public Sub New()</span>\r\n        <span style=\"color:green\">'\tInitializeComponent()</span>\r\n\r\n        <span style=\"color:green\">'\t_buttonDropA = New RibbonButton(_ribbon, CUInt(RibbonMarkupCommands.cmdButtonDropA))</span>\r\n        <span style=\"color:green\">'\t_buttonDropB = New RibbonButton(_ribbon, CUInt(RibbonMarkupCommands.cmdButtonDropB))</span>\r\n        <span style=\"color:green\">'\t_buttonDropC = New RibbonButton(_ribbon, CUInt(RibbonMarkupCommands.cmdButtonDropC))</span>\r\n        <span style=\"color:green\">'\t_buttonDropD = New RibbonButton(_ribbon, CUInt(RibbonMarkupCommands.cmdButtonDropD))</span>\r\n        <span style=\"color:green\">'\t_buttonDropE = New RibbonButton(_ribbon, CUInt(RibbonMarkupCommands.cmdButtonDropE))</span>\r\n        <span style=\"color:green\">'\t_buttonDropF = New RibbonButton(_ribbon, CUInt(RibbonMarkupCommands.cmdButtonDropF))</span>\r\n        <span style=\"color:green\">'\t_comboBox1 = New RibbonComboBox(_ribbon, CUInt(RibbonMarkupCommands.cmdComboBox1))</span>\r\n        <span style=\"color:green\">'          _comboBox2 = New RibbonComboBox(_ribbon, CUInt(RibbonMarkupCommands.cmdComboBox2))</span>\r\n        <span style=\"color:green\">'          _comboBox3 = New RibbonComboBox(_ribbon, CUInt(RibbonMarkupCommands.cmdComboBox3))</span>\r\n        <span style=\"color:green\">'          _uiCollectionChangedEvent = New UICollectionChangedEvent()</span>\r\n\r\n        <span style=\"color:green\">'\tAddHandler _buttonDropA.ExecuteEvent, AddressOf _buttonDropA_ExecuteEvent</span>\r\n        <span style=\"color:green\">'\tAddHandler _buttonDropB.ExecuteEvent, AddressOf _buttonDropB_ExecuteEvent</span>\r\n        <span style=\"color:green\">'\tAddHandler _buttonDropC.ExecuteEvent, AddressOf _buttonDropC_ExecuteEvent</span>\r\n        <span style=\"color:green\">'\tAddHandler _buttonDropD.ExecuteEvent, AddressOf _buttonDropD_ExecuteEvent</span>\r\n        <span style=\"color:green\">'\tAddHandler _buttonDropE.ExecuteEvent, AddressOf _buttonDropE_ExecuteEvent</span>\r\n        <span style=\"color:green\">'\tAddHandler _buttonDropF.ExecuteEvent, AddressOf _buttonDropF_ExecuteEvent</span>\r\n\r\n        <span style=\"color:green\">'\tInitComboBoxes()</span>\r\n        <span style=\"color:green\">'End Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _buttonDropA_ExecuteEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> ExecuteEventArgs)\r\n\t\t\t<span style=\"color:green\">' get selected item index from combo box 1</span>\r\n\t\t\t<span style=\"color:blue\">Dim</span> selectedItemIndex <span style=\"color:blue\">As</span> <span style=\"color:blue\">UInteger</span> = _comboBox1.SelectedItem\r\n\r\n\t\t\t<span style=\"color:blue\">If</span> selectedItemIndex = Constants.UI_Collection_InvalidIndex <span style=\"color:blue\">Then</span>\r\n\t\t\t\tMessageBox.Show(<span style=\"color:#a31515\">&quot;No item is selected in simple combo&quot;</span>)\r\n\t\t\t<span style=\"color:blue\">Else</span>\r\n\t\t\t\t<span style=\"color:blue\">Dim</span> selectedItem <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>\r\n\t\t\t\t_comboBox1.ItemsSource.GetItem(selectedItemIndex, selectedItem)\r\n\t\t\t\t<span style=\"color:blue\">Dim</span> uiItem <span style=\"color:blue\">As</span> IUISimplePropertySet = <span style=\"color:blue\">CType</span>(selectedItem, IUISimplePropertySet)\r\n\t\t\t\t<span style=\"color:blue\">Dim</span> itemLabel <span style=\"color:blue\">As</span> PropVariant\r\n\t\t\t\tuiItem.GetValue(RibbonProperties.Label, itemLabel)\r\n\t\t\t\tMessageBox.Show(<span style=\"color:#a31515\">&quot;Selected item in simple combo is: &quot;</span> &amp; <span style=\"color:blue\">CStr</span>(itemLabel.Value))\r\n\t\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span>\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _buttonDropB_ExecuteEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> ExecuteEventArgs)\r\n\t\t\t<span style=\"color:green\">' get string value from combo box 2</span>\r\n\t\t\t<span style=\"color:blue\">Dim</span> stringValue <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span> = _comboBox2.StringValue\r\n\t\t\tMessageBox.Show(<span style=\"color:#a31515\">&quot;String value in advanced combo is: &quot;</span> &amp; stringValue)\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _buttonDropC_ExecuteEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> ExecuteEventArgs)\r\n\t\t\t<span style=\"color:green\">' enumerate over items</span>\r\n\t\t\t<span style=\"color:blue\">Dim</span> itemsSource <span style=\"color:blue\">As</span> IEnumUnknown = <span style=\"color:blue\">CType</span>(_comboBox1.ItemsSource, IEnumUnknown)\r\n\t\t\titemsSource.Reset()\r\n\t\t\t<span style=\"color:blue\">Dim</span> items(0) <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>\r\n\t\t\t<span style=\"color:blue\">Dim</span> fetchedItem <span style=\"color:blue\">As</span> <span style=\"color:blue\">UInteger</span>\r\n\t\t\t<span style=\"color:blue\">Do</span> <span style=\"color:blue\">While</span> itemsSource.<span style=\"color:blue\">Next</span>(1, items, fetchedItem) = HRESULT.S_OK\r\n\t\t\t\t<span style=\"color:blue\">Dim</span> uiItem <span style=\"color:blue\">As</span> IUISimplePropertySet = <span style=\"color:blue\">CType</span>(items(0), IUISimplePropertySet)\r\n\t\t\t\t<span style=\"color:blue\">Dim</span> itemLabel <span style=\"color:blue\">As</span> PropVariant\r\n\t\t\t\tuiItem.GetValue(RibbonProperties.Label, itemLabel)\r\n\t\t\t\tMessageBox.Show(<span style=\"color:#a31515\">&quot;Label = &quot;</span> &amp; <span style=\"color:blue\">CStr</span>(itemLabel.Value))\r\n\t\t\t<span style=\"color:blue\">Loop</span>\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _buttonDropD_ExecuteEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> ExecuteEventArgs)\r\n\t\t\t_uiCollectionChangedEvent.Attach(_comboBox1.ItemsSource)\r\n\t\t\t<span style=\"color:blue\">AddHandler</span> _uiCollectionChangedEvent.ChangedEvent, <span style=\"color:blue\">AddressOf</span> _uiCollectionChangedEvent_ChangedEvent\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _buttonDropE_ExecuteEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> ExecuteEventArgs)\r\n\t\t\t<span style=\"color:blue\">Dim</span> itemsSource1 <span style=\"color:blue\">As</span> IUICollection = _comboBox1.ItemsSource\r\n\t\t\t<span style=\"color:blue\">Dim</span> <span style=\"color:blue\">count</span> <span style=\"color:blue\">As</span> <span style=\"color:blue\">UInteger</span>\r\n\t\t\titemsSource1.GetCount(<span style=\"color:blue\">count</span>)\r\n\t\t\t<span style=\"color:blue\">count</span> &#43;= 1\r\n\t\t\titemsSource1.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label &quot;</span> &amp; <span style=\"color:blue\">count</span>.ToString(), .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _buttonDropF_ExecuteEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> ExecuteEventArgs)\r\n\t\t\t<span style=\"color:blue\">RemoveHandler</span> _uiCollectionChangedEvent.ChangedEvent, <span style=\"color:blue\">AddressOf</span> _uiCollectionChangedEvent_ChangedEvent\r\n\t\t\t_uiCollectionChangedEvent.Detach()\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\t\t<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _uiCollectionChangedEvent_ChangedEvent(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> UICollectionChangedEventArgs)\r\n\t\t\tMessageBox.Show(<span style=\"color:#a31515\">&quot;Got ChangedEvent. Action = &quot;</span> &amp; e.Action.ToString())\r\n\t\t<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> InitComboBoxes()\r\n            _comboBox1.RepresentativeString = <span style=\"color:#a31515\">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;</span> <span style=\"color:green\">' THIS HAS NO EFFECT</span>\r\n            _comboBox2.RepresentativeString = <span style=\"color:#a31515\">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;</span> <span style=\"color:green\">' THIS HAS NO EFFECT</span>\r\n            _comboBox3.RepresentativeString = <span style=\"color:#a31515\">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;</span> <span style=\"color:green\">' THIS WORKS</span>\r\n\r\n            _comboBox1.Label = <span style=\"color:#a31515\">&quot;Simple Combo&quot;</span>\r\n            _comboBox2.Label = <span style=\"color:#a31515\">&quot;Advanced Combo&quot;</span>\r\n            _comboBox3.Label = <span style=\"color:#a31515\">&quot;Another Combo&quot;</span>\r\n\r\n            <span style=\"color:blue\">AddHandler</span> _comboBox1.ItemsSourceReady, <span style=\"color:blue\">AddressOf</span> _comboBox1_ItemsSourceReady\r\n            <span style=\"color:blue\">AddHandler</span> _comboBox2.ItemsSourceReady, <span style=\"color:blue\">AddressOf</span> _comboBox2_CategoriesReady\r\n            <span style=\"color:blue\">AddHandler</span> _comboBox2.ItemsSourceReady, <span style=\"color:blue\">AddressOf</span> _comboBox2_ItemsSourceReady\r\n            <span style=\"color:blue\">AddHandler</span> _comboBox3.ItemsSourceReady, <span style=\"color:blue\">AddressOf</span> _comboBox3_ItemsSourceReady\r\n\r\n            <span style=\"color:green\">' HAVE TO CALL THE FOLLOWING METHODS TO ADD ITEMS TO COMBOBOX1 AND COMBOBOX2</span></pre>\r\n<pre>            <span style=\"color:blue\">Call</span> _comboBox2_CategoriesReady()\r\n            <span style=\"color:blue\">Call</span> _comboBox2_ItemsSourceReady()\r\n            <span style=\"color:blue\">Call</span> _comboBox1_ItemsSourceReady()\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _comboBox1_ItemsSourceReady()\r\n            <span style=\"color:green\">' set combobox1 items</span>\r\n            <span style=\"color:blue\">Dim</span> itemsSource1 <span style=\"color:blue\">As</span> IUICollection = _comboBox1.ItemsSource\r\n            itemsSource1.Clear()\r\n            itemsSource1.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 1&quot;</span>, .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n            itemsSource1.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 2&quot;</span>, .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n            itemsSource1.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 3&quot;</span>, .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _comboBox2_CategoriesReady()\r\n            <span style=\"color:green\">' set _comboBox2 categories</span>\r\n            <span style=\"color:blue\">Dim</span> categories2 <span style=\"color:blue\">As</span> IUICollection = _comboBox2.Categories\r\n            categories2.Clear()\r\n            categories2.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Category 1&quot;</span>, .CategoryID = 1})\r\n            categories2.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Category 2&quot;</span>, .CategoryID = 2})\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _comboBox2_ItemsSourceReady()\r\n            <span style=\"color:green\">' set _comboBox2 items</span>\r\n            <span style=\"color:blue\">Dim</span> itemsSource2 <span style=\"color:blue\">As</span> IUICollection = _comboBox2.ItemsSource\r\n            itemsSource2.Clear()\r\n            itemsSource2.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 1&quot;</span>, .CategoryID = 1})\r\n            itemsSource2.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 2&quot;</span>, .CategoryID = 1})\r\n            itemsSource2.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 3&quot;</span>, .CategoryID = 2})\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> _comboBox3_ItemsSourceReady()\r\n            <span style=\"color:green\">' set combobox3 items</span>\r\n            <span style=\"color:blue\">Dim</span> itemsSource3 <span style=\"color:blue\">As</span> IUICollection = _comboBox3.ItemsSource\r\n            itemsSource3.Clear()\r\n            itemsSource3.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 1&quot;</span>, .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n            itemsSource3.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 2&quot;</span>, .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n            itemsSource3.Add(<span style=\"color:blue\">New</span> GalleryItemPropertySet() <span style=\"color:blue\">With</span> {.Label = <span style=\"color:#a31515\">&quot;Label 3&quot;</span>, .CategoryID = Constants.UI_Collection_InvalidIndex})\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> Form1_Load(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> System.Object, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> System.EventArgs) <span style=\"color:blue\">Handles</span> <span style=\"color:blue\">MyBase</span>.Load\r\n            <span style=\"color:blue\">Call</span> createRibbon()\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Public</span> _ribbon <span style=\"color:blue\">As</span> Ribbon\r\n        <span style=\"color:blue\">Sub</span> createRibbon()\r\n            <span style=\"color:green\">'============================BELOW code is from designer========================================</span>\r\n            <span style=\"color:blue\">Me</span>._ribbon = <span style=\"color:blue\">New</span> RibbonLib.Ribbon()\r\n            <span style=\"color:green\">'</span>\r\n            <span style=\"color:green\">'_ribbon</span>\r\n            <span style=\"color:green\">'</span>\r\n            <span style=\"color:blue\">Me</span>._ribbon.Location = <span style=\"color:blue\">New</span> System.Drawing.Point(0, 0)\r\n            <span style=\"color:blue\">Me</span>._ribbon.Minimized = <span style=\"color:blue\">False</span>\r\n            <span style=\"color:blue\">Me</span>._ribbon.Name = <span style=\"color:#a31515\">&quot;_ribbon&quot;</span>\r\n            <span style=\"color:blue\">Me</span>._ribbon.ResourceName = <span style=\"color:#a31515\">&quot;RibbonMarkup.ribbon&quot;</span>\r\n            <span style=\"color:blue\">Me</span>._ribbon.ShortcutTableResourceName = <span style=\"color:blue\">Nothing</span>\r\n            <span style=\"color:blue\">Me</span>._ribbon.Size = <span style=\"color:blue\">New</span> System.Drawing.Size(712, 100)\r\n            <span style=\"color:blue\">Me</span>._ribbon.TabIndex = 2\r\n\r\n\r\n            <span style=\"color:blue\">Me</span>.Controls.Add(<span style=\"color:blue\">Me</span>._ribbon)\r\n            <span style=\"color:green\">'============================ABOVE code is from designer========================================</span>\r\n\r\n            <span style=\"color:green\">'Private _ribbon As RibbonLib.Ribbon</span>\r\n            _buttonDropA = <span style=\"color:blue\">New</span> RibbonButton(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdButtonDropA))\r\n            _buttonDropB = <span style=\"color:blue\">New</span> RibbonButton(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdButtonDropB))\r\n            _buttonDropC = <span style=\"color:blue\">New</span> RibbonButton(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdButtonDropC))\r\n            _buttonDropD = <span style=\"color:blue\">New</span> RibbonButton(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdButtonDropD))\r\n            _buttonDropE = <span style=\"color:blue\">New</span> RibbonButton(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdButtonDropE))\r\n            _buttonDropF = <span style=\"color:blue\">New</span> RibbonButton(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdButtonDropF))\r\n            _comboBox1 = <span style=\"color:blue\">New</span> RibbonComboBox(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdComboBox1))\r\n            _comboBox2 = <span style=\"color:blue\">New</span> RibbonComboBox(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdComboBox2))\r\n            _comboBox3 = <span style=\"color:blue\">New</span> RibbonComboBox(_ribbon, <span style=\"color:blue\">CUInt</span>(RibbonMarkupCommands.cmdComboBox3))\r\n            _uiCollectionChangedEvent = <span style=\"color:blue\">New</span> UICollectionChangedEvent()\r\n\r\n            <span style=\"color:blue\">AddHandler</span> _buttonDropA.ExecuteEvent, <span style=\"color:blue\">AddressOf</span> _buttonDropA_ExecuteEvent\r\n            <span style=\"color:blue\">AddHandler</span> _buttonDropB.ExecuteEvent, <span style=\"color:blue\">AddressOf</span> _buttonDropB_ExecuteEvent\r\n            <span style=\"color:blue\">AddHandler</span> _buttonDropC.ExecuteEvent, <span style=\"color:blue\">AddressOf</span> _buttonDropC_ExecuteEvent\r\n            <span style=\"color:blue\">AddHandler</span> _buttonDropD.ExecuteEvent, <span style=\"color:blue\">AddressOf</span> _buttonDropD_ExecuteEvent\r\n            <span style=\"color:blue\">AddHandler</span> _buttonDropE.ExecuteEvent, <span style=\"color:blue\">AddressOf</span> _buttonDropE_ExecuteEvent\r\n            <span style=\"color:blue\">AddHandler</span> _buttonDropF.ExecuteEvent, <span style=\"color:blue\">AddressOf</span> _buttonDropF_ExecuteEvent\r\n\r\n            InitComboBoxes()\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Class</span>\r\n<span style=\"color:blue\">End</span> <span style=\"color:blue\">Namespace</span>\r\n</pre>\r\n</div>\r\n",
    "PostedDate": "2011-01-21T03:32:10.39-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "554855",
    "ThreadId": "242735",
    "Html": "\r\n<p>Hi,</p>\r\n<p>you should add two Form classes to your project. Create one with Ribbon, one with Toolbar. You can use the Designer for this. Then, define an interface and implement it in your Forms. On startup you can define which Form you want to use.</p>\r\n<p>&nbsp;</p>\r\n<p>Inheritance of the Form would be another option here...</p>\r\n<p>-<span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>MainForm</p>\r\n<p>-<span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>- RibbonMainForm</p>\r\n<p>-<span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span>- ToolbarMainForm</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks</p>\r\n<p>Bernhard</p>\r\n",
    "PostedDate": "2011-01-25T00:46:59.32-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "575577",
    "ThreadId": "242735",
    "Html": "<p>Hi Adamata</p>\r\n<p>I like to know if you can share your idea.</p>\r\n<p>How you create menu ribbon at runtime?</p>\r\n<p>I like to know, because I have a application when user&nbsp;logs to the system the menu ribbon load the options according to the role of the user.</p>\r\n<p>Regards</p>\r\n<p>Ricardo</p>",
    "PostedDate": "2011-03-04T07:13:07.537-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "592252",
    "ThreadId": "242735",
    "Html": "<p>Hi raranibar,</p>\n<p>Sorry it took so long to respond, I've been really busy with other none computer stuff (disc golf). &nbsp;Anyway, the way I tried to create a ribbon at runtime is demonstrated in the long code above. &nbsp;However, I had a few problems when I tried this. &nbsp;One of those  problems being that I couldn't change the physical size of the ComboBox control which was completely unacceptable. &nbsp;So, I decided this was a bad approach and decided instead to create the ribbon the normal way (in the designer). &nbsp;With this method, I simply  hide and un-hide the ribbon using the RibbonViewable property. &nbsp;After hiding the ribbon, I make a regular menu and toolbar visible allowing the user to choose between the two.</p>\n<p>I doubt this will help you either way. &nbsp;Since it seems maybe you want to change buttons and other controls on the ribbon according to a particular user that logs in. &nbsp;Even when I was trying to create the actual ribbon itself at runtime, the actual ribbon  controls were already laid out in the Ribbon.xml file.</p>\n<p>Sorry again that I couldn't be more help. &nbsp;I would be interested in hearing about your progress if you should happen to pursue this.</p>\n<p>Good luck, raranibar.</p>",
    "PostedDate": "2011-04-05T11:31:47.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]